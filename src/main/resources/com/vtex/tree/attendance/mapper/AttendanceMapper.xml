<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vtex.tree.attendance.mapper.AttendanceMapper">

	<insert id="insertIn">
		/* AttendanceMapper.insertIn */
		
		INSERT INTO
			TB_ATTENDANCE
				(
					ATTENDANCE_NO,
					EMAIL,
					DAY,
					IN_TIME,
					OUT_TIME,
					LATENESS_AT,
					FRST_REGIST_PNTTM,
					FRST_REGISTER_ID,
					LAST_UPDT_PNTTM,
					LAST_UPDUSR_ID,
					DELETE_AT
				)
			VALUES
				(
					SEQ_TB_ATTENDANCE.NEXTVAL,
					#{email},
					#{day},
					#{inTime},
					null,
					#{latenessAt},
					SYSDATE,
					#{email},
					SYSDATE,
					#{email},
					'N'					
				)
		<selectKey resultType="int" keyProperty="attendanceNo" order="AFTER">
			SELECT
				SEQ_TB_ATTENDANCE.CURRVAL	
			FROM
				DUAL
		</selectKey>
	</insert>
	
	<insert id="insertAttendance">
		/* AttendanceMapper.insertAttendance */
		
		INSERT INTO
				TB_ATTENDANCE
					(
						ATTENDANCE_NO,
						EMAIL,
						DAY,
						IN_TIME,
						OUT_TIME,
						LATENESS_AT,
						LATENESS_REASON,
						FRST_REGIST_PNTTM,
						FRST_REGISTER_ID,
						LAST_UPDT_PNTTM,
						LAST_UPDUSR_ID,
						DELETE_AT
					)
				VALUES
					(
						SEQ_TB_ATTENDANCE.NEXTVAL,
						#{email},
						#{day},
						#{inTime},
						#{outTime},
						#{latenessAt},
						#{latenessReason},
						SYSDATE,
						#{adminEmail},
						SYSDATE,
						#{adminEmail},
						'N'
					)
	</insert>
	
	<select id="isIn" resultType="int">
		/* AttendanceMapper.isIn */
		
		SELECT
			COUNT(IN_TIME)	
		FROM
			TB_ATTENDANCE
		WHERE
			DAY = TO_CHAR(SYSDATE, 'yyyy-mm-dd')
			AND EMAIL = #{email}
	</select>
	
	<select id="isOut" resultType="int">
		/* AttendanceMapper.isOut */
		
		SELECT
			COUNT(OUT_TIME)	
		FROM
			TB_ATTENDANCE
		WHERE
			DAY = TO_CHAR(SYSDATE, 'yyyy-mm-dd')
			AND EMAIL = #{email}
	</select>
	
	<select id="getAttendanceList" resultType="attendanceVO">
		/* AttendanceMApper.getAttendanceList */
	
		SELECT
			A.ATTENDANCE_NO,
			A.EMAIL,
			B.NAME,
			A.DAY,
			A.IN_TIME,
			A.OUT_TIME,
			A.LATENESS_AT,
			A.LATENESS_REASON
		FROM
			TB_ATTENDANCE A
			LEFT OUTER JOIN TB_MEMBER B  ON B.EMAIL = A.EMAIL
		WHERE
			A.DELETE_AT = 'N'
		 	AND B.QUIT_AT = 'N'
		 	<if test="(startDay != null and startDay != 'null' and startDay != '') and (endDay == null or endDay == '')">
		 		AND A.DAY = #{startDay}
		 	</if>
		 	<if test="(startDay == null or startDay == '') and (endDay != null and endDay != 'null' and endDay != '')">
		 		AND A.DAY = #{endDay}
		 	</if>
		 	<if test="(startDay != null and startDay != 'null' and startDay != '') and (endDay != null and endDay != 'null' and endDay != '')">
		 		AND TO_DATE(A.DAY, 'YYYY-MM-DD') BETWEEN TO_DATE(#{startDay}, 'YYYY-MM-DD')  AND TO_DATE(#{endDay}, 'YYYY-MM-DD')
		 	</if>
			<if test="latenessAt != null and latenessAt != 'null' and latenessAt != ''">
		 		AND A.LATENESS_AT = #{latenessAt}
		 	</if>
		 	<if test="name != null and name != 'null' and name != ''">
		 		AND ( A.EMAIL LIKE '%' || #{name} || '%' OR  B.NAME LIKE '%' || #{name} || '%' )
		 	</if>	
		ORDER BY
			TO_DATE(A.DAY, 'YYYY-MM-DD')DESC,
			TO_DATE(A.IN_TIME, 'HH24:MI')DESC, 
			TO_DATE(A.OUT_TIME, 'HH24:MI') DESC	
	</select>
	
	<select id="getAttendanceListCnt" resultType="int">
		/* AttendanceMApper.getAttendanceListCnt */
		
		SELECT
			COUNT(*)
		FROM
			TB_ATTENDANCE A
			LEFT OUTER JOIN TB_MEMBER B  ON B.EMAIL = A.EMAIL
		WHERE
			A.DELETE_AT = 'N'
		 	AND B.QUIT_AT = 'N'
		 	<if test="(startDay != null and startDay != 'null' and startDay != '') and (endDay == null or endDay == '')">
		 		AND A.DAY = #{startDay}
		 	</if>
		 	<if test="(startDay == null or startDay == '') and (endDay != null and endDay != 'null' and endDay != '')">
		 		AND A.DAY = #{endDay}
		 	</if>
		 	<if test="(startDay != null and startDay != 'null' and startDay != '') and (endDay != null and endDay != 'null' and endDay != '')">
		 		AND TO_DATE(A.DAY, 'YYYY-MM-DD') BETWEEN TO_DATE(#{startDay}, 'YYYY-MM-DD')  AND TO_DATE(#{endDay}, 'YYYY-MM-DD')
		 	</if>
			<if test="latenessAt != null and latenessAt != 'null' and latenessAt != ''">
		 		AND A.LATENESS_AT = #{latenessAt}
		 	</if>
		 	<if test="name != null and name != 'null' and name != ''">
		 		AND ( A.EMAIL LIKE '%' || #{name} || '%' OR  B.NAME LIKE '%' || #{name} || '%' )
		 	</if>	
	</select>
	
	<select id="autoName" resultType="memberVO">
		/* AttendanceMapper.autoName */
		
		SELECT
			A.EMAIL,
			A.NAME,
			B.DETAIL_CODE_NAME AS DEPARTMENT_NAME,
			C.DETAIL_CODE_NAME AS POSITION_NAME,
			A.QUIT_AT,
			A.ROLE_CODE,
			A.ESNTL_ID
		FROM 
			TB_MEMBER A
			LEFT JOIN TB_COMMON_CODE_DETAIL B ON B.DETAIL_CODE  = A.DEPARTMENT
			LEFT JOIN TB_COMMON_CODE_DETAIL C ON C.DETAIL_CODE = A.POSITION
		WHERE
			ROLE_CODE != 'ADMIN'
			AND QUIT_AT = 'N'
			AND NAME LIKE '%' || #{searchName} || '%'
		ORDER BY A.NAME
	</select>
	
	<update id="updateOut">
		/* AttendanceMapper.updateOut */
		
		UPDATE
			TB_ATTENDANCE
		SET
			OUT_TIME = #{outTime},
			LAST_UPDT_PNTTM = SYSDATE,
			LAST_UPDUSR_ID = #{email}
		WHERE
			ATTENDANCE_NO = #{attendanceNo}
			AND DAY = #{day}
			AND EMAIL = #{email}
	</update>
	
	<update id="updateAttendance">
		/* AttendanceMapper.updateAttendance */

		UPDATE
			TB_ATTENDANCE
		SET
			IN_TIME = #{inTime},
			OUT_TIME = #{outTime},
			LATENESS_AT = #{latenessAt},
			LATENESS_REASON = #{latenessReason},
			LAST_UPDT_PNTTM = SYSDATE,
			LAST_UPDUSR_ID = #{adminEmail}
		WHERE
			ATTENDANCE_NO = #{attendanceNo}
			AND DAY = #{day}
			AND EMAIL = #{email}		
	</update>
	
	<update id="deleteAttendance">
		/* AttendanceMapper.deleteAttendance*/
		
		UPDATE
			TB_ATTENDANCE
		SET
			DELETE_AT = 'Y'
		WHERE
			ATTENDANCE_NO = #{attendanceNo}
	</update>

</mapper>