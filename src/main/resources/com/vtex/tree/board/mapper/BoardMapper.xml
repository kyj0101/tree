<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vtex.tree.board.mapper.BoardMapper">
	
	<resultMap type="map" id="fileMap">
		<result column="file_id" property="fileId"/>
		<result column="original_file_name" property="originalFileName"/>
		<result column="renamed_file_name" property="renamedFileName"/>
		<result column="file_sn" property="fileSn"/>
		<result column="file_store" property="fileStore"/>
	</resultMap>
	
	<insert id="insertFile">
		/* BoardMapper.insertFile */
		
		INSERT INTO
			TB_FILE
				(
					FILE_ID,
					FRST_REGIST_PNTTM,
					USE_AT
				)
			VALUES
				(
					SEQ_TB_FILE.NEXTVAL,
					SYSDATE,
					DEFAULT
				)
		<selectKey resultType="_int" keyProperty="no" order="AFTER">
			SELECT
				SEQ_TB_FILE.CURRVAL
			FROM
				DUAL
		</selectKey>
	</insert>
	
	<insert id="insertFileDetail">
		/* BoardMapper.insertFileDetail */
		
		INSERT INTO
			TB_FILE_DETAIL
				(
					FILE_ID,
					FILE_SN,
					ORIGINAL_FILE_NAME,
					RENAMED_FILE_NAME,
					FILE_STORE
				)
				VALUES
					(
						#{fileId},
						#{fileSn},
						#{originalName},
						#{reNamed},
						#{fileStore}
					)
	</insert>
	
	<insert id="insertBoard">
		/* BoardMapper.insertBoard */
		
		INSERT INTO
			TB_BOARD
				(
					BOARD_NO,
					CATEGORY_NO,
					NOTICE_AT,
					EMAIL,
					BOARD_VIEW,
					BOARD_DATE,
					BOARD_TITLE,
					BOARD_CONTENT,					
					FRST_REGIST_PNTTM,
					FRST_REGISTER_ID,
					LAST_UPDT_PNTTM,
					LAST_UPDUSR_ID,
					DELETE_AT,
					FILE_ID
				)
			VALUES
				(
					SEQ_TB_BOARD.NEXTVAL,
					1,
					#{noticeAt},
					#{email},
					0,
					SYSDATE,
					#{title},	
					#{content},
					SYSDATE,
					#{email},
					SYSDATE,
					#{email},
					'N',
					#{fileId}
				)
	</insert>

	<select id="getBoardList" resultType="boardVO">
		/* BoardMapper.getBoardList */

		SELECT
			A.TOP_AT,
			A.BOARD_NO,
			A.BOARD_VIEW,
			A.BOARD_TITLE,
			B.NAME,
			A.RANK,
			A.TOTCNT
		FROM
			(

				SELECT
					'TOP'  AS TOP_AT,
					ROW_NUMBER () OVER(ORDER BY A.FRST_REGIST_PNTTM DESC)  AS RANK,
					A.BOARD_NO,
					A.BOARD_VIEW,
					A.BOARD_TITLE,
					A.NOTICE_AT,
					A.CATEGORY_NO,
					A.DELETE_AT,
					A.EMAIL,
					(
						SELECT
							COUNT(*)
						FROM
							TB_BOARD A
						WHERE
							A.NOTICE_AT = 'Y'
							AND A.CATEGORY_NO = 1
							AND A.DELETE_AT = 'N'
					) AS TOTCNT
				FROM
					TB_BOARD A
				WHERE
					A.NOTICE_AT = 'Y'
					AND A.CATEGORY_NO = 1
					AND A.DELETE_AT = 'N'
					
				UNION ALL
				
				SELECT
					'BOTTOM'  AS TOP_AT,
					ROW_NUMBER () OVER(ORDER BY A.FRST_REGIST_PNTTM DESC)  AS RANK,
					A.BOARD_NO,
					A.BOARD_VIEW,
					A.BOARD_TITLE,
					A.NOTICE_AT,
					A.CATEGORY_NO,
					A.DELETE_AT,
					A.EMAIL,
					(
						SELECT
							COUNT(*)
						FROM
							TB_BOARD A
						WHERE
							A.NOTICE_AT = 'N'
							AND A.CATEGORY_NO = 1
							AND A.DELETE_AT = 'N'
					) AS TOTCNT
				FROM
					TB_BOARD A
				WHERE
					A.NOTICE_AT = 'N'
					AND A.CATEGORY_NO = 1
					AND A.DELETE_AT = 'N'
				) A
			LEFT OUTER JOIN TB_MEMBER B ON A.EMAIL = B.EMAIL
		WHERE
			A.RANK <![CDATA[<=]]> A.TOTCNT
	</select>
	
	
	<select id="getBoardListCnt" resultType="int">
		/* BoardMapper.getBoardListCnt */

		SELECT
			COUNT(*)
		FROM
			(

				SELECT
					'TOP'  AS TOP_AT,
					ROW_NUMBER () OVER(ORDER BY A.FRST_REGIST_PNTTM DESC)  AS RANK,
					A.BOARD_NO,
					A.BOARD_VIEW,
					A.BOARD_TITLE,
					A.NOTICE_AT,
					A.CATEGORY_NO,
					A.DELETE_AT,
					A.EMAIL,
					(
						SELECT
							COUNT(*)
						FROM
							TB_BOARD A
						WHERE
							A.NOTICE_AT = 'Y'
							AND A.CATEGORY_NO = 1
							AND A.DELETE_AT = 'N'
					) AS TOTCNT
				FROM
					TB_BOARD A
				WHERE
					A.NOTICE_AT = 'Y'
					AND A.CATEGORY_NO = 1
					AND A.DELETE_AT = 'N'
					
				UNION ALL
				
				SELECT
					'BOTTOM'  AS TOP_AT,
					ROW_NUMBER () OVER(ORDER BY A.FRST_REGIST_PNTTM DESC)  AS RANK,
					A.BOARD_NO,
					A.BOARD_VIEW,
					A.BOARD_TITLE,
					A.NOTICE_AT,
					A.CATEGORY_NO,
					A.DELETE_AT,
					A.EMAIL,
					(
						SELECT
							COUNT(*)
						FROM
							TB_BOARD A
						WHERE
							A.NOTICE_AT = 'N'
							AND A.CATEGORY_NO = 1
							AND A.DELETE_AT = 'N'
					) AS TOTCNT
				FROM
					TB_BOARD A
				WHERE
					A.NOTICE_AT = 'N'
					AND A.CATEGORY_NO = 1
					AND A.DELETE_AT = 'N'
				) A
			LEFT OUTER JOIN TB_MEMBER B ON A.EMAIL = B.EMAIL
		WHERE
			A.RANK <![CDATA[<=]]> A.TOTCNT
	</select>
	
	<select id="selectOneBoard" resultType="boardVO">
		/* BoardMapper.selectOneBoard */
		
		SELECT
			A.BOARD_TITLE,
			A.BOARD_CONTENT,
			A.FILE_ID,
			A.BOARD_VIEW,
			A.EMAIL,
			B.NAME
		FROM
			TB_BOARD A
			LEFT OUTER JOIN TB_MEMBER B ON B.EMAIL = A.EMAIL
		WHERE
			BOARD_NO = #{boardNo}
	</select>
	
	<select id="selectBoardFiles" resultMap="fileMap">
		/* BoardMapper.selectBoardFiles */
		
		SELECT
			A.FILE_ID,
			B.ORIGINAL_FILE_NAME,
			B.RENAMED_FILE_NAME,
			B.FILE_SN,
			B.FILE_STORE
		FROM
			TB_FILE A
			LEFT OUTER JOIN TB_FILE_DETAIL B ON B.FILE_ID = A.FILE_ID 
		WHERE
			A.USE_AT = 'Y'
			AND A.FILE_ID = #{fileId}
	</select>
	
	<update id="addViewNum">
		/* BoardMapper.addViewNum */
		
		UPDATE
			TB_BOARD
		SET
			BOARD_VIEW = #{boardView}
		WHERE
			BOARD_NO = #{boardNo}
	</update>
	
	<delete id="deleteFile">
		/* BoardMapper.deleteFile */
		
		DELETE FROM
			TB_FILE_DETAIL
		WHERE
			FILE_STORE = #{fileStore}
			AND RENAMED_FILE_NAME = #{renamedFile}
	</delete>

</mapper>